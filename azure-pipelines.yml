
trigger:
  branches:
    include:
      - main
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.11'
  workingDirectory: '.'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: BuildJob
    displayName: 'Build FastAPI Application'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'
      workingDirectory: '$(workingDirectory)'

    - script: |
        # Create requirements.txt from pyproject.toml if it doesn't exist
        if [ ! -f requirements.txt ]; then
          python -c "
import toml
data = toml.load('pyproject.toml')
deps = data['project']['dependencies']
with open('requirements.txt', 'w') as f:
    for dep in deps:
        f.write(dep + '\n')
          "
        fi
      displayName: 'Generate requirements.txt'
      workingDirectory: '$(workingDirectory)'

    - script: |
        # Run database migrations and setup
        python -c "
from app.database import engine
from app.models import *
from sqlmodel import SQLModel
SQLModel.metadata.create_all(engine)
        "
      displayName: 'Initialize Database'
      workingDirectory: '$(workingDirectory)'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(workingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true
      displayName: 'Archive application files'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
      displayName: 'Publish build artifacts'

- stage: Deploy
  displayName: 'Deploy to Azure Static Web Apps'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy FastAPI Application'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureStaticWebApp@0
            inputs:
              app_location: '/'
              api_location: 'app'
              output_location: ''
              azure_static_web_apps_api_token: '$(AZURE_STATIC_WEB_APPS_API_TOKEN)'
            displayName: 'Deploy to Azure Static Web Apps'

          - script: |
              echo "Application deployed successfully!"
              echo "Your FastAPI app should be available at your Azure Static Web App URL"
            displayName: 'Deployment confirmation'
