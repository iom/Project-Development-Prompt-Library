# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - iom-d-we-datallmpoc-prompt-lib-01

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Generate requirements.txt from pyproject.toml only if missing; also ensure azure libs
      - name: Ensure requirements.txt exists
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! -f requirements.txt ]]; then
            if [[ -f pyproject.toml ]]; then
              echo "Generating requirements.txt from pyproject.toml..."
              python -m pip install --upgrade pip
              pip install toml
              python - <<'PY'
import toml
from pathlib import Path
p = Path('pyproject.toml')
data = toml.load(p)
deps = data.get('project', {}).get('dependencies', [])
with open('requirements.txt', 'w') as f:
    f.write('\n'.join(deps))
print(f"requirements.txt written with {len(deps)} deps")
PY
            else
              echo "ERROR: Neither requirements.txt nor pyproject.toml found." >&2
              exit 1
            fi
          else
            echo "Using existing requirements.txt"
          fi
          grep -q '^azure-storage-blob' requirements.txt || echo 'azure-storage-blob>=12.19.0' >> requirements.txt
          grep -q '^azure-core' requirements.txt || echo 'azure-core>=1.30.0' >> requirements.txt

      # Optional: verify dependencies resolve (good early failure signal)
      - name: Verify dependency resolution
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Upload only what the app needs at runtime; venv is intentionally excluded
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            app/
            requirements.txt
            startup.sh
            seed/
            pyproject.toml
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          # Critical: extract into workspace root so "package: ." points to correct app root
          path: .

      - name: Make startup.sh executable (if present)
        run: |
          if [ -f "startup.sh" ]; then
            chmod +x startup.sh
          fi

      - name: Debug - List downloaded files
        run: |
          echo "=== PWD ==="
          pwd
          echo "=== Root listing ==="
          ls -la
          echo "=== App directory ==="
          ls -la app/ || echo "app directory not found"
          echo "=== Python files (sample) ==="
          find . -name "*.py" | head -20

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'iom-d-we-datallmpoc-prompt-lib-01'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5BF3B71B25AF441B8C3B893DC6954C68 }}
          package: .
